<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何创建属于自己的个人博客-实战篇</title>
    <url>/2020/04/27/hexo-2020-4-20-createblog/</url>
    <content><![CDATA[<p>趁着这次疫情在家自己搭建了一个个人博客，针对于 NexT 主题进行了多次优化。下面我将自己搭建的过程记录下来，为想要自己搭建博客的同学提供参考。</p>
<a id="more"></a>

<h3 id="1-开始搭建我们的博客"><a href="#1-开始搭建我们的博客" class="headerlink" title="1. 开始搭建我们的博客"></a>1. 开始搭建我们的博客</h3><ol>
<li><p>准备条件</p>
<p>首先我们得需要自己注册一个 Github 账号，地址为：<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> ， GitHub Pages 帮助我们来架设一个静态网站，这就解决了服务器的问题。</p>
<p>Hexo 这个是一个博客框架，号称是一个快速，简单和签那个大的博客框架。事实也是证明如此。</p>
</li>
<li><p>新建项目</p>
<p>在 GitHub 上建立一个<a href="https://github.com/new" target="_blank" rel="noopener">仓库 </a>，Repository name 初填写 {username}.github.io ，假设你的账户名师 zhangsan，那么这里就是 zhangsan.github.io 。必须以 github.io 为后缀结尾。</p>
</li>
<li><p>在 GitHub 上配置 SSH Key</p>
<p>生成本地密钥：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>进入到本地密钥的存放路径：/Users/ 用户名 /.ssh/ ，公钥存放在 id_rsa 文件中；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat id_rsa</span><br></pre></td></tr></table></figure>

<p>复制 shh 公钥，添加到 GitHub 中去。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/add_sshkey.png" alt="ssh公钥配置" style="zoom:35%;">
</li>
<li><p>安装环境 Node 、Hexo</p>
<p><strong>安装Node.js</strong></p>
<p>首先在自己的电脑上安装 Node.js，下载地址：<a href="https://nodejs.org/zh-cn/download/，可以安装" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/，可以安装</a> Stable 版本。</p>
<p>安装完毕之后，确保环境变量配置好，能正常使用 <code>npm</code> 命令。</p>
<p><strong>安装Hexo</strong></p>
<p>接下来就需要安装 Hexo 了，这是一个博客框架，Hexo 官方还提供了一个命令行工具，用于快速创建项目、页面、编译、部署 Hexo 博客，所以在这之前我们需要先安装 Hexo 的命令行工具。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化项目</p>
<p>接下来我们使用 Hexo 的命令行创建一个项目，并将其在本地跑起来，整体跑通看看。</p>
<p>首先使用如下命令创建项目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init &#123;name&#125;</span><br></pre></td></tr></table></figure>

<p>这里的 name 就是我们的项目名称，我们这里要创建为项目名为 Blog 的博客，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>这样我们的文件夹下面就会有 Hexo 的初始化文件。</p>
<p>接下来我们首先进入新生成的文件夹里面，然后调用 Hexo 的 generate 命令，将 Hexo 编译生成 HTML 代码，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>这里也可以使用 hexo g 来简写。然后我们利用 Hexo 提供的 server 命令把博客在本地运行起来。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>此时访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 即可显示出 Hexo 默认的主题信息博客。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/hello_hexo.png" alt="hexo_index" style="zoom:50%;">

<p>那么此时我们的博客架子就已经出来了。这里关于生成和本地预览可以使用命令 <code>hexo s -g</code></p>
</li>
<li><p>常用的Hexo命令**</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/hexo_command.png" alt="hexo_command" style="zoom:50%;">
</li>
<li><p>选择 Hexo 主题：NexT</p>
<p>关于主题目前 GitHub 上有两个版本的 NexT 主题</p>
<p>a：git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>
<p>b：git clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> themes/next</p>
<p>第二个是目前 NexT 的官方版本，会持续进行更新，所以我选择的是这个版本，关于对于 NexT 中的个性化设置也是基于此版本进行的。所以推荐你使用第二个版本。</p>
<p>进入到项目文件夹 blog 中 <code>cd blog</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>执行完毕后在 themes 文件下，有一个 next 的主题文件。</p>
<p>修改我们项目目录下的配置文件_config.yml 文件，找到 theme 字段，修改为 next 即可，修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>执行：<code>hexo s -g</code> 即可生成静态页面至 public 目录下，并且可以进行本地预览。</p>
</li>
</ol>
<pre><code>那么到此我们的第一步就已经完成了，喝口水，休息下，让我们来准备好下一步的配置吧。</code></pre><h3 id="2-个性化设置-NexT"><a href="#2-个性化设置-NexT" class="headerlink" title="2. 个性化设置 NexT"></a>2. 个性化设置 NexT</h3><p>​        <strong>修改前需要对项目配置文件和主题配置文件有一定的了解</strong></p>
<p>​        我们针对于主题的个性话设置全在主题的配合文件下</p>
<p>​        <img src="/2020/04/27/hexo-2020-4-20-createblog/next_config.png" alt="next_config" style="zoom:50%;"></p>
<ol>
<li><p>选择NexT的样式 <code>Scheme Settings</code> scheme: Pisces <code>sidebar:</code> position: left</p>
</li>
<li><p>代码块调整 <code>codeblock</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codeblock: # 代码块特效</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme</span><br><span class="line">  highlight_theme: night bright</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result.</span><br><span class="line">    show_result: true</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>
</li>
<li><p>阅读进度百分比</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true #显示阅读百分比</span><br></pre></td></tr></table></figure>
</li>
<li><p>github_banner 显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https:&#x2F;&#x2F;github.com&#x2F;Lofoer</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="5">
<li><p>添加Valine评论 <a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">https://leancloud.cn/dashboard/applist.html#/apps</a></p>
<p>为什么会选择这个评论呢，一个方面就是界面简单，第二个就是配置起来也超级方便，因为我们的博客是静态博客，那么对于评论的数据来说是动态的，需要存储的，那么我们就需要借助一个平台来存储评论，这个时候我们通过 LeanCloud 这个网站来进行，注册应用后，会有 appkey &amp; appid 我们只需要添加授权码和 ID 我们的博客就有评论的功能了。非常简单。</p>
</li>
</ol>
<ol start="6">
<li><p>添加分类页</p>
<p><strong>分类页</strong>    </p>
<p>分类功能和标签类似，一个文章可以对应某个分类，如果要增加分类页面可以使用如下命令创建：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>然后同样地，会生成一个 source/categories/index.md 文件。</p>
<p>我们可以自行添加一个 type 字段来指定页面的类型：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<p><strong>添加文章</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new hello-world</span><br></pre></td></tr></table></figure>

<p>创建的文章会出现在 <code>source/_posts</code> 文件夹下，是 MarkDown 格式。如果你对 Makedown 不了解的话，那么先百度下啦。这里的编译器我推荐用 <code>Typora</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-04-19 01:23:51</span><br><span class="line">categories: hexo</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="7">
<li><p>添加搜索功能 hexo-generator-searchdb</p>
<p>搜索页需要安装一个插件叫做：hexo-generator-searchdb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>在我们的项目<strong>hexo_config</strong>目录下配置如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure>

<p>主题<strong>next_config</strong>的配置文件下修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="8">
<li><p>侧边栏社交链接 &amp; 友情链接</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/social_config.png" alt="social" style="zoom:38%;">

<img src="/2020/04/27/hexo-2020-4-20-createblog/links_config.png" alt="links" style="zoom:50%;">
</li>
<li><p>显示评论数</p>
<p>打开 <code>themes -&gt; next -&gt; languages -&gt; zh-CN.yml</code> 在 POST 标签下 comments.valine: 评论数 #可以自定义</p>
</li>
</ol>
<ol start="10">
<li><p>添加阅读时长 <code>npm install hexo-symbols-count-time</code></p>
<p>在我们的项目<strong>hexo_config</strong>目录下配置如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 阅读时长</span><br><span class="line">symbols_count_time:</span><br><span class="line">symbols: true</span><br><span class="line">time: true</span><br><span class="line">total_symbols: true</span><br><span class="line">total_time: true</span><br><span class="line">exclude_codeblock: false</span><br><span class="line">awl: 2</span><br><span class="line">wpm: 275</span><br><span class="line">suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p>主题<strong>next_config</strong>的配置文件下修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="11">
<li><p>打赏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward:</span><br><span class="line">  wechatpay: &#x2F;images&#x2F;wechatpay.jpeg</span><br><span class="line">  #alipay: &#x2F;images&#x2F;alipay.png</span><br><span class="line">  #paypal: &#x2F;images&#x2F;paypal.png</span><br><span class="line">  #bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class="line"> </span><br><span class="line"> reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 您的支持将鼓励我继续创作！</span><br></pre></td></tr></table></figure>

<p>打赏设置 <code>comment</code> 是打赏的提示语，打赏的图片可以放在主题的 images 下。</p>
</li>
<li><p>图片显示</p>
<p>图片显示，目前有很多是通过第三方的图片云来进行图片的存储，但是目前我这里是通过 Hexo 插件把图片上传到 GitHub 上进行显示的，从效率上看，使用 Makedown 来添加本地照片就能显示。下面就开始放大招具体说说怎么做。</p>
<p><strong>第一步安装插件</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p><strong>第二步打开 Hexo 配置文件</strong>_config.yml</p>
<p> 找到 post_asset_folder，把这个选项从 false 改为 true</p>
<p><strong>第三步修改 index.js 文件</strong></p>
<p>/node_modules/hexo-asset-image/index.js js 文件 替换如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line">     </span><br><span class="line">     &#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">     function getPosition(str, m, i) &#123;</span><br><span class="line">     return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">     var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">     hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">     var config &#x3D; hexo.config;</span><br><span class="line">     if(config.post_asset_folder)&#123;</span><br><span class="line">             var link &#x3D; data.permalink;</span><br><span class="line">         if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">         var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">         else</span><br><span class="line">         var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">         &#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">         var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line">     </span><br><span class="line">         var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">         for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">         var key &#x3D; toprocess[i];</span><br><span class="line">     </span><br><span class="line">         var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">             ignoreWhitespace: false,</span><br><span class="line">             xmlMode: false,</span><br><span class="line">             lowerCaseTags: false,</span><br><span class="line">             decodeEntities: false</span><br><span class="line">    &#125;);</span><br><span class="line">     </span><br><span class="line">         $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">             if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">                 &#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">                 var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">                 if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">                 !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">                 &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">                 &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">                 var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                     return elem !&#x3D; &#39;&#39;;</span><br><span class="line">                 &#125;);</span><br><span class="line">                 var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                     return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">                 &#125;);</span><br><span class="line">                 if(srcArray.length &gt; 1)</span><br><span class="line">                     srcArray.shift();</span><br><span class="line">                 src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">                 $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">                 console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;else&#123;</span><br><span class="line">                 console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">                 console.info&amp;&amp;console.info($(this));</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">         data[key] &#x3D; $.html();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure>

<p><strong>第四步使用</strong></p>
<p>当我们使用 hexo 命令新建一篇文章时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 文章名</span><br></pre></td></tr></table></figure>

<p>在 source/_posts 文件下会生成一个后缀为.md 的文件和一个文章名的文件夹，我们在这个里面上传图片。</p>
<p><strong>第五步使用图片</strong></p>
<p>在 Makedown 中引用图片时候，注意文件路径节点是用文章名开头的相对路径，并不是图片的绝对路径，这里一定要注意。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/upload_img.png" alt="create_blog_solurl" style="zoom:60%;">

<img src="/2020/04/27/hexo-2020-4-20-createblog/upload_image_example.png" style="zoom:50%;">

<p><strong>图片使用相对于当前文件夹的图片路径。</strong></p>
</li>
</ol>
<ol start="13">
<li><p>修改详情文章的tag图标</p>
<p>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索`，把#号替换成为 {i class=”fa fa-tags”}{/i} ‘{}’ -&gt; 替换为’&lt;&gt;’</p>
</li>
</ol>
<ol start="14">
<li><p>全局调整字体大小  themes\next\source\css_variables<code>下的</code>base.styl</p>
<p>具体的修改内容如下：有需要的可以自行调整。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/update_css_font_config.png" style="zoom:50%;">

<p>到此为止的话，我们关于 NexT 的这个主题的个性化修改目前就到这里了，目前的这个阶段已经完全满足了我们的博客的内容展示。后续的一定内容请一定要参考官方的修改配置</p>
</li>
<li><p>取消文章目录的归纳数字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: false</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: false</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>

<p>将number: 属性的true 改为 false。</p>
</li>
</ol>
<h3 id="3-ToDoList："><a href="#3-ToDoList：" class="headerlink" title="3. ToDoList："></a>3. ToDoList：</h3><ul>
<li><input disabled type="checkbox"> <strong>待验证文章页面展示是否有效</strong></li>
<li><input disabled type="checkbox"> <strong>自定义域名 &amp; 域名访问 ：</strong>目前通过注册域名和域名进行解析后，访问速度没有直接访问 lofoer.github.io速度快，所以暂时不跟博客进行绑定了。</li>
<li><input disabled type="checkbox"> <strong>文章加密：</strong> 参考 <a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></li>
</ul>
<h3 id="4-部署到GitHub上"><a href="#4-部署到GitHub上" class="headerlink" title="4. 部署到GitHub上"></a>4. 部署到GitHub上</h3><ol>
<li><p>关于部署我们需要知道我们的部署地址：它需要对应 GitHub 的一个仓库地址，这个信息需要我们配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;Lofoer&#x2F;Lofoer.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>目前这里的 repo，是填写我的，后续需要修改成你们自己的地址。</p>
</li>
<li><p>安装 Git 的部署插件：hexo-deployer-git</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完成后执行部署命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<img src="/2020/04/27/hexo-2020-4-20-createblog/hexo_blog_img.png" style="zoom:50%;">
</li>
<li><p><strong>设置部署脚本</strong></p>
<p>在项目文件夹下面新建一个 deploy.sh 的脚本文件，内容如下：   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>这样我们在部署的时候只需要执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh deploy.sh</span><br></pre></td></tr></table></figure>

<p>这样我们写完博客后可以完美的更新博客了，非常简单。你学会了吗？</p>
<p><strong>特别说明：</strong> 每当我们完成了一个小的个性化设置的时候，不妨通过hexo命令在本地进行预览<code>hexo s -g</code> 看是否达到了自己的预期。</p>
</li>
</ol>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li><p><strong>关于Hexo的问题：</strong></p>
<p>一般我们在安装hexo 插件的时候不会出现什么问题，但是有时候就是安装不上插件，这个时候一般使我们的源出现了问题，如果你对源不了解，没关系，按照我的操作执行，都能解决。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>或者在安装插件前加上 <strong><code>sudo</code></strong></p>
</li>
<li><p>关于4000端口被占用问题：**</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo lsof -i :4000</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COMMAND    PID   USER   FD   TYPE             DEVICE SIZE&#x2F;OFF NODE NAME</span><br><span class="line">Google     796 vivian   24u  IPv6 0x3f05d2f78b8f93ed      0t0  TCP localhost:52958-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   26u  IPv6 0x3f05d2f78b8f8e2d      0t0  TCP localhost:52959-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   30u  IPv6 0x3f05d2f78b8fbc2d      0t0  TCP localhost:52960-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   39u  IPv6 0x3f05d2f79de69e2d      0t0  TCP localhost:52961-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   61u  IPv6 0x3f05d2f79de6a3ed      0t0  TCP localhost:52962-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   85u  IPv6 0x3f05d2f79de6af6d      0t0  TCP localhost:52963-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">node      2658 vivian   39u  IPv6 0x3f05d2f79de6d1ed      0t0  TCP *:terabase (LISTEN)</span><br></pre></td></tr></table></figure>

<p>注意看node，就是这个PID端口 2658，如果释放这个端口？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -9 &#123;PID&#125;</span><br></pre></td></tr></table></figure>

<p><strong>{PID}</strong> 替换成你的被占用的PID号</p>
</li>
</ol>
<p><strong>结束语：如果您通过我这边文章成功创建了属于自己的个人博客的话，那么不妨通过下面的打赏按钮对我进行支持！谢谢。</strong></p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/640.gif" style="zoom:5%;">

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>创建个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>如何发布文章和管理我们的文章-实战篇</title>
    <url>/2020/04/29/hexo-2020-4-29-postarticle/</url>
    <content><![CDATA[<p>在开篇前呢，说说如何管理我们自己的文件夹，管理文件夹其实也是一门技术活，管理的好，能够提高我们的工作效率，也容易积累我们的知识内容。</p>
<a id="more"></a>

<h3 id="文件夹的一级分类"><a href="#文件夹的一级分类" class="headerlink" title="文件夹的一级分类"></a>文件夹的一级分类</h3><ol>
<li><p>三、五年内文件夹不会发生任何改变</p>
</li>
<li><p>目前使用</p>
</li>
<li><p>知识积累</p>
<p>可以按照项目对应存档的关系进行管理，所有的项目都是有一个项目周期的，长期会使用到的放到存档中。</p>
</li>
</ol>
<h3 id="二三级：时间轴方式"><a href="#二三级：时间轴方式" class="headerlink" title="二三级：时间轴方式"></a>二三级：时间轴方式</h3><ol>
<li>年份为二级</li>
<li>月日为三级</li>
</ol>
<h3 id="存档（长期）"><a href="#存档（长期）" class="headerlink" title="存档（长期）"></a>存档（长期）</h3><ol>
<li>不是项目（运营）</li>
<li>长期使用</li>
</ol>
<h3 id="二三级：专题方式"><a href="#二三级：专题方式" class="headerlink" title="二三级：专题方式"></a>二三级：专题方式</h3><ol>
<li>专题为二级</li>
<li>定制为三级</li>
</ol>
<h3 id="数据的备份"><a href="#数据的备份" class="headerlink" title="数据的备份"></a>数据的备份</h3><p>​    有一个好的数据备份是非常重要的一个习惯，他能够在我们帮助我们在短时间内快速找到自己的数据，备份日期：一周备份一次</p>
<h3 id="文章发布需要一个好的分类和标签"><a href="#文章发布需要一个好的分类和标签" class="headerlink" title="文章发布需要一个好的分类和标签"></a>文章发布需要一个好的分类和标签</h3><p>受到管理文件夹的启发，那么我们如何来发布和管理好我们的文章呢？</p>
<p>在博客里面有两个菜单，一个是分类，一个是标签。这里我把分类当做是我们的一个一级分类，标签是一个二级分类。</p>
<p>举例：比如我们要发布一篇关于使用Hexo来创建博客的文章，那么这里的 <strong>categories</strong> 就是Hexo ,<strong>tags</strong> 就是创建博客。</p>
<p>我们的文章都是通过Markdown的格式来进行写作的，优势是非常的明显。那么如何快速找到我们的文章源文件呢？我这里用到的就是一个时间，</p>
<p>源文件按照 时间-分类-标签的来进行发布</p>
<p>下面进入实战演练：</p>
<p>使用Hexo命令来创建文章</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 2020.4.29-hexo-createblog</span><br></pre></td></tr></table></figure>

<p>那么这个时候源文件就是按照时间-分类-标签的方式来进行显示了，同样的一级分类都在一起，也可以使用专题的方式来进行命名比如。</p>
<p>又经过思考后我觉得还是通过专题+日期+标签的风湿可能是最好的。</p>
<p><strong>结束语：如果您通过我这边文章成功创建了属于自己的个人博客的话，那么不妨通过下面的打赏按钮对我进行支持！谢谢。</strong></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>发布文章</tag>
      </tags>
  </entry>
  <entry>
    <title>普通工薪家庭的股票投资-实战篇</title>
    <url>/2020/05/06/stock-2020-5-6-tactics/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码不正确，请重新输入！" data-whm="文章不能被校验, 不过您还是能看看解密后的内容！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章已加密, 请输入密码查看。" /><label>该文章已加密, 请输入密码查看。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="b390dc678cc48fe29d845ebd84447343746980d4ac4ece848ec2285f62314f39">c5d02b037b8fc15e931626aecd910a9289fe6d19bc9fcba7873eea2d279e3f846824ab2e0d26f6ea17aebf37990440635c284a794586a51c22f9992d738d37f396238d406a56ef08e90f21fd03bf3c83ed53f5968896cfeb837e91165e4fd16d6905fa24a66476419b788d829a57a6e10d5503737b8d3604f051c7cfe70b50e4e9a2f734f19c66e4ac8f2995a49d22db2b9e6852931bc1d011ebf21071640cf90d980ca1bcba3ddae67a639f47762772ff445fa746c82e7b039084d353529556914b5a8860b92d21149d7a019876aa0a6b62e7bf38399d552dc762818d4b76125a0dfa9f38246829901aca50f41d87220f426a50f910e245053b1ff33c62337756ff034d530614c487c569708b7f58e78e7c40cd08f7c91d06c508202ae8224c84b08a25983ba84e6a5b3dd101a184642c74d6d2155d57467095a05fd731fe9e0fdb54797c66a8f7d9adfdd3d534dfe60913a38cb3878df76c6a54a340cdf16f485541549abf3696c338795cccea0e8c5e8676824a10585fa65585eef32a23e3ee932104a03c8f4a8e4e7ccfd0dc7dd8c5de95b32ee18dc7bd47bef70c9f4eecbefac9644be0af07dd1fe30e07645a5b9b9866dfd96f04698f19ea8dc2a6978bfcc1caaf2ce7997315623af87c4ecb667054e05d27138de8c37c6f01cbdeeda3850deeb49ffa2103c959a1fcb867a9f6313807f6473aa9faa91799046096ca853d7430af7f65548fdb446deb4dc73eb6e3f6c2ce38b0e9709cba74332d2fe4c8db57405c9097f42cc8a65460a7748ff027600156bff6181815f7b6be7e9a6bf0479496add9d46a96eab7396e73c0140aa230ea0ad541f415cb3dd0928097437db10e46e801436f2c6aecd89b3ade4fc40ae472d271606ccf7171448ddb9efa6f22f723df695f9b01f116bdad83fdde0ef3657370b0f51f3bbc39b28982d4e541a7f9ab1533e7943f7f25ea01aa27cea5072f3ea8730523bb116f9e652aeca2cc48b41bba2e19363f34a31c16a7573919c2a0daec9d171463f99b692d6f6ea1cd9f2e5ad2a090d50822ee40c2ee1fc3e4b0ea40306348cdba5995e5a2cf7d7279b0a9e591316266edd8da5fb93c03648df8c602c84620cade3e486ebd405562838d5ef70f94065a04830baa157b4b57516aa080d2fa47d0a0c04efde9c7eeb6a39c06cbcfe1c0c78e99f9308520f06d7b8b2173ec4d0f74e8e8cf800d9ba7f5831d3cbc826caf2d9d91023a5029616ef0d7916d98b6cbc978b6d96e58e0a73399802c139d865a8772d5f863b3d2a9769498af27298ff7f012f10cc32488b5e8087ca267d8f32a8c5a61d2d72c56f21ad511e6c802c026ea2e6e6f04a7e515bb81e120626831cb8d8291ecdb91270e2ee420e8a984d812caa938240fe8219d17eba861dc7c261a489390580529dc21b854b9dca9d84b6d72d5d89a92c1c56e633f75263d547fc039c8815cc8196d4ae12c7c4cc7aa7702dcd2371f88b709182ac8d052d2b2f6a17e753785ee7ac241a1c632dc354a67b97ab91d60351cf98837e8df5b4cdb45fcfe350a36e2b14e7ded0554bee594795125023366c42dad50eca4bcc7d66b10c029f7ce2c9b6be0e9241166679e67962d46424d7b0b5c02b764d7844a221cbcb06623cd2cc89ce2dec83519c8cba7c23d0a8b312dc0cdf0378f1c4cf2b2af2fd5903e048c7447afc9f23ba44aef380938e40dec7ae0c960f738d5b79edb67fd22a8091084e279c4cc34f746a8dfe307fd10a093a702567fe7cfaa14847dc21394b2684b9b036c66c1e29601a21df055b651c0b56f4724f3ed1b59679dbf0c65b04e3992cf50eeacf26d8940dbd8f0e118639bd1238ac99c78185092439f8c84e94e10a5cff0f39f91b7d8bbee174c4bdda2b919cb8dfc47dff9339294b5152d1824ae7a50f1e21e830c4f75619eb9fe501199fac75888115d71adbb9c3b65f6982d4401b0db98013913f86354f8c4c6e4aa94a54076c5477b654fa62d555fae4d2109e67c9bf62498e36bcaa846b746f0490a5074910ad5fcbb86e24118a6f14ea82c4c5fa735103c41619b9a8c68486716f2148a8bf5790c3691f9d57221fcbacbba3bf902f8578d835befa500ada92a2b3b12b86836198a91fe8951c761af37c36c6fab72423caa700da71ecbf0479719e8f80c30a41e29fe71269b367c51ace4929ca88f6d2a1ed58ca740d99df587169b969ada6b01a64e0044dbf7e97c3da6c21a2ccc38a8702887a25dfaff2d35489bfc2fc1b74a8f8490cdd93b282024de82bfb5d3686f80f09988f71d485144c0478b8bc4c7f292a0e2a049f49dcbc267cefd7fed836caf36695bda752a9efa88a7f1ba8f2ce8f21bc210435961f3e9c8682db3778881d9e5cf74dc2137be2eaa44352d82479ef0b906f9409a8d5a3009f372e889b1fac456b814b060810250919914a77066a0d58bfad0a382cb41360d2a4934d37d62532c51835a43a396f8496d5a3bf29f220c313df59bc67d8e199c57e60633c5474bec0a6a7bc1ee0075c500fe6d18548f15e4385e631e7f40e7ba01e174bcbd3f7cb36b36aaba78f36564a91926e60942674889d353d5b3d8dae8413bd89af5dcb8658e036bc370ed68743040db8fcac40e44545a6375833c7a019fa5f57a975993c9a7a7212325c6478cc6f36b80b044c7e96154bf6a77e60db16dd70f1fc06455b94f02e5fa67c39d443877780bfbbf78c9894ae882594d8e6737cff0d704d86f5bfd0b0c708f46c20d3419d631b2050e2dd7ac31c3d8378abb2b307f0f7defa5d65a789fadedf098d98cdfaf466e02b9fa1d423bdec189af07d7c84723e5a12643cc6211a8ad0533e6ac15424894be52a37ed2d2b7d87af24a5615e54eb7965f1ea3f20cd319139bd61f87ae50a9bfd7572714e0bce3d14e3549166bc530c4ec8b5d9993f31ce325b2c3ec5cfbe194291d8a2d6f6c1561a75e36c7fb8d6042af26d19be0e49181b3bea23a35f5c36f412b6cac66aa5c7339554e26f854fff55a25b699e092ea746e7fbe6cae02ef0e881745f2d6228eca026b64076a702800598784e56ec2a01daf7b12d4a6a456771be2aa89c09f3ec87142fcf56aaa3e81fbab41deb2d5701ef45be60b047981f69db469daef77d753097c80770137c79803190864e010f42e5c227f323ad23635aaf4f574cab313fbf84bb089537dd8c40149bfb2825fc4a7e454f01722035542bc8d0bf6f3915fc3f1b867dc6edb7ef340efacf4f5dfee10105f36b7d9146e650756eb25483b2223376d63590396461e94245728e25f3a8d237136d8b9e6195704303fade3366decf11f2741567366bf40ea3e12c58bef5b522c6abaa294107d709a2765e029c65ac1dff6223ca70b827dc05af64676d69409966941eb669c0a4a2057329ae50ef7c18b7108515a8caae29292b81991f7cc0485efd95ac38bde532f0fa8cd80e53a66a8e8e294afbabde48bcfddcdec28ac7e7b0d57b351ec9f5535469ece68cd771cea3583d95186f2deb28c95db7f1f188995dc9a3e4cea5e8f56804004ccd28104361a2997ce07805026e86df835b69a118c18b131aa29b947269f50dd4ea4274dda62a868006c3ce0ae69e010b04be50359661bbfc367fbd297a09598b81137dc36846ab5ece137f3199fb8a720e460df770d9577fb0f95350ea69ed832a4f5f52dcfe7be633616092e8244e895bf452918607fa130a9e5287fd999ec011a0def52eea278a04b968ced54f6a723bb0d003aa307816f91aa84cf41ad704400ca2d2b06102b917d003df8e843c336e4eb4c524881ff3d43dae2fb1ccdb0ce019a75313d3a19d71690e2e820dd40a19a7e1b281526c1a094f5795d2add30b4dce95e11a9aa3989d0973b47e9d90a184918fafdfcf25c042ad2706df36d78dbe1dd8861bfc4983150e299ddefb4ee4219e39848a09669514ff48e55c3b120f262b57d7fd95bdb9c61426542adb5590028eb612e3a8e2b091110c99eca877e2303e5a58ced33e1a799a1ab374523f84f5fa8120372a161a5bd82764b8d5d28f19349441350a15a2cce28fb67e83f588d8c945ba5aa77b04f2da58dc360afb255d95c745ba049ea6db017f9deeaf25f1379c2f26bbda88019a1cf43b1887aa26f8e0c32d76098f0ca7461f92c184803389a52fc4cb93799023ad5f2985bb6dd8521449ea9843ef6b858c21f28416ef1e18b8355fabb77fb0b2e139a1238bf866145a086c5d9c5a4869bbc200c1e67520b6f3740ec80ad8bcb9c83daa3825069549ea1d6f9f46bf8b43d9c7e42269c72ce94a4f0e55caec9b819b782faf3e262088f632470d1096077e954fa2937888ae97846ea92d536f28300f0c8c01bac8738c77ef09423affd89954cc5d50873a1adc411a0453cc4969c0c5ae0e8e6f052b189fa6a4b3bff35f5e4971d2adc6bf1ce79f59f2f2ee2007a9da8ddc63c9fc2b8841da5a5db187d45e7cf9b513e74eaa838ad41060be54e3dafa46694248940fdb56bc84a637b6f6d2cf615ab18ed5fbe31a5c0264839e57389418877b720953287497cfe9308b357821b9072d9149b65b3a426c2e632078b3b1927e2162e55b7b6af5f7785d1ebe18f0d7f8d447bed29c1b361a2e8fcfa06903bee311681d960fcd7d339dd0c3a3b353e6929ea6f8a24117f88c942722223c9e5258f58cd6a1b841f0ae35ae37842a6e390c0e854f1c2a4fc0cb1278532ce274a6cde1fd973c87e326b646f0e26d4a6056692ab495e21065adc0ab50b131ac2495a1ff59af7b940e7a0b39bb45d9ce98654028d0c122463f2bc5344b747ebccb4e70699cb6897bf159fa8d4629028033aed195b101bcc236f70b1579fb6b44bc468338d3a0994d58d18c781e555849821d099a78d2babe4bab637ed4573aa5284b824763aad7104cf7fc1b1dccb82e58f1b6d0c12c9e22fb842677e284b324f6e96705657b951974f9671dafdf28afbc90ebacb662760efe85f768966ba60fcfc08ecd92c136908a8cc8314c61e69bf8022714ddc10602dcc8c8ef503c75e779abaeb242cc0abead1c3ece5b22a79d485943b649f15769b1d7be958fb01f32a3bf79c69086f3ccfc079f8dff30c5711dd9fb03d183af3b649b71e1b7c8bcca80cb73a2a763547f524ad7406e5f74ab8a6fa49642b4e4b902e58b5fd41ca2cebb73dceeaf6835b78310cf43a881c9f81ecfa17f29a6052c11c615bfc9ef84021c72bbd4a7a7391c64fffaf774e1b379a85d9c466cb6509ff4738a0419df0574c05e377abffddb2bce99f92711ecc967bf90ff649f344f79ff7500eaf3f572508d74574a5cde274981c5df97359386911578f840e737fd7d4865eb3059cd279dad7f7962532cb26482aff67768af244a6c9e07dae987a85b9ffe23d7eca8c292fd2596855be1b6999a03733f0856f7d8d18167013acdc54c5a6fceb52c37d6b57dec90cb5408fa04580d7a532ede889755aea4d90531ea74692015810cba625a093b303f6ffeb3aaad761950512562209986e3e67b202a670bd6a5c27fca3b5daa39676829bc1f5f99b967885fe29ada20ac279bd61cae0b6deb2ae8fff200e1ce267a6b5a40ffb894ec87a22f2e7ed22461caa2c6879ef77bf56d6da208fe136ef98289dea2f3d4a4ab3089ba05af3e36794b1e1f24ad1b842d18d0d2681a1e9a3acb107be1a9bee82aafcb1d5c4e3231c7c94aa87227c676e2c1963613adbdceb91c9f4cef8ed004863422a4f1def32a596a7f8539501b9fcbd5824089168881f947cf7ca3b8145af1d579734e99077916d9b7fdb308fe554b60450bbe01b42f4423e757e1a015cc388383aa42efd9a502c2ac345a7de45ac1875d126dfd5933c4262df038df3c206440dec427c1f94c7a43ae18aa6cbc9d7e518f1b51187d0fb9f2861df6c3762957d89200a53bd18858d6486624ec35701d208e5aa9a93eca0e240fea2125f0cc3c9c3fff7b9a155ce6fb7974236d396a27e35b0a4aef302aaa4cb7ef5efa0a7ffba97d148b00ac3d1e6597d31b7b4a6b2b80b8b8ee10c25a7ca52a63c1a397b1a9cc39bbc89993c4024d37d774f0d293608f56d6c2aeb7b6a07ba2721cccc4352ebea8aa04320f0b8358af0af0206fe89e34acf39d1556b92ad4f84dbf3b706b9cab60e930583c505e359cb1bb9bb356243bff6dfd06cd20c3c68778141caefe07e150bd8016bae9e41572b332897f915c1f39e87e5c8d6b7d2802a81bdf9e7ea7871c0ba8f342d22e2b3df931249b55e41e37c27b699074528c9100fe615ac1e32ab29c59033ba5276cdf48af145bb5dfcc4ac007e2ab1384b477c5c07d44b2e88c854ab0348d69f9b082b8945402967b5cc40b229fc197ff5bb984d186319000f0f8fe584a895db7b34fd7dccd92c9dacb19a928643c15e92581687c0410bba5b059a871764b83d03e500f56f909077a79e70bed9b22cf1b251c3165bb2a2da9af2c00fb277adf29622ad801e92f6de02450532ef52b645090cf985020b2a34a1b6bc345f01a84b203abf0455314e0adfe7cec782fce23140ebbcdea23741c7e37e79adad1d69c9fce90b7ef0d68ed93bc4b9d2a7052bcf4078338dc8878e403c27496d9cd41d5b1753a20e9b409d180925ea751d7a2bc1abdf064a8a83b2aede03311af9657c4a037e83593b27ea0a6cfa59c4ec9ece0569959823fc064eafcf407fe7c08519f0353de3172c6defd02e549d1180ca92ca293ef5107aec0704969ca432e684251cbb791ca1df41a21de875a666382775ce9ebeb5e1367597789c0e7d2516c33c0eab091826a77e6af39bc9d871a56fc3210534d39ef6128049c3c1ec36693024d0ad990af04314a4e590a131287305457735a3687fc054d8a01e9f6659ea20dd57a0c879234e911555ae0085428615f5bd5429c88d22e4d598c608bbd41ccb793f2fe2e7fe1d70f647802f3726766bf64f84f3689d5716e5e500515138c757428529255b55623e81bfcae2c1a6b745169cf1be207f219b3837c4270d11615f57fb96cf8572276fff50ac973fd29b2cd54523dd7bfa43cce85adecb879f58ebc6fa4ecddb1545c7157d380029dda4b7afce0d0fb68a27d6269c28c09d01a02a04d15bce017769a3d09931b2ebf2e615c6b325405b20b1a7223146071c1fbd4a25d6d2d64522b561b6bb11cb33d9328031de52edca2c2278f6268136999e1dde82d5236d37a04d88f174418d6ef4499a95bd2bdeca188cb73ab6bf4995030bcb8f142bfd5fe6dd91a367044f7674def0f1093707a234b19578fbd0b0f2aa85b6d21290c81594ab7ae21e71301a56232b3567df5170ceaeec73bd31df859c08d5821dd85754c219dd0b7cffb4df63c6cf4012ce0ce938b4998faf03516aec3e3b3cd63920e2fa36cadd297382fff3b89159ddd68033ff74754b51d0e613020336d500f9a28f742c02742836bd72bad9063dc502af84848536ae8b0948b239702ba0afee856846349849d442c7c40f8496e71fe97af495ff9598034398767e31464b8493b23f7e381847519a9cde77872295a3641452175179cc0fab6d18ee573c4410e16eec19c3580328da520d22446ce0e16f8fdce7997210c2e668eb77b6f3b6bbe7e6275905d429a8e9176f999d6b5d0ef462716703f3bc450c4db23b1ce543efaa1d800d99ac97d4d3444503f1cf81b359c123078e5bb671f9b0889f0669c332b02429f0e61a6a8871621807f8a12327ed9c9ad9f5f6437f156ac2f5e85edcf93188d5b3606abce91a8ebf01dcd1423c55e05f645b873d5427514cb43e895e52de41427eb598380ea26444d2f58c01b09a57d57e326d9eaa08d7cd18dd9330bba25bb87d44b89b88b459fa7b2b5999089e9b7ccfb19d2d885bae7965b3378c7d799a5255437595bdd4446eff75ef80e28d6a5770f9d87eeea220c2deb1f3e4f30657e9956c2d1f7e6cbe36debe7e242186ac1d83793c61ef6af738960f771ff608df0d4733f85460177bd51a3bec0e201d3c5df71d25d067ff3bf347169a3fcc076c0bb2a107b1f1b31c5cb2f6dc16e5ebd32e40fc9ca80b3bf461c8aa7ade415b550cb15f4ef9c84301816c308ea5728b365ef0fa283988052bd5eee9b465b9cde35241e76de910ddace00e1550c0bd69fe787a27aa8a9434bd2cb93d23b8ac2badde060f36e722c9ddb91d2b1cbd809ea188de26e007747d7b0115bdcef068f5c1740a547c7bc51d901772bf0b4c4a3558ee2007b6128db4ffcff159c48f19185f207999e229556208817e877ef539b8807a11ff5a967d84cddf5c2d249ea68c69342b18e3b8e84ae0bdcdacdcb06c3989abad66662fa97aca6b9bf85cf957ca3c6710a6666ff5ff68933634adde662b4f5bb36572ceeed62a4ce23a38221cb01693167d6730451782344acf211b9e9325c64f1cc0fbb6d899aa9652d65c431958f7a7c71119f9b6075e745ff071ec8c0f02d8340ebd5aaf1bd454594ca72565ddfcb7e494e91981883ebbd5bff74a413625fd6b217d24d1429cc55eb0399bbae718230ed39f9485f6f51fa622fc5bcb5de254539cf72e2cb811ae3d4d06703357fd91d5f3d430b9608a1825d8786e5829994bead2b843590d3cefd5bdc63d1eedb0e7c7cec07222ffeea48545e1c4bf13d74d185f2e995758c3dc2dfe1203bc34f5724f44666ea60768930196b622d21b443da1b0a8a7c2b82d40c4b4f3126fb4c6b8640292e5eb48e915a922b8a2040514ca63a05ea89ebd425135827aea9803503bf70c3d538022e74f38392e24d8fbfb20874ebcebe76e3796eef568179a4c43babcba009ffd5354b38c4d9c5f5cf6cdd1c161773b8a3f4ca6488d1366d114b02897672b6a627b60fe05283ae1114d6a548b4f967a1e01523feeb5886d22331ec4cb50a9ba4a4600e34c933bcd9a4d7c5291db32e07ba90a17ff5de7a54063eb4bfa4193ca42bd10017d426198bfee23ba654c1b81c6dc636dab19afd187c789dc5ba70528862478d0097463dbfec418b00506df00901474b74d1bfabfc3b89815b16cb79c4bb97b69f0d09b0656f81794f0e3892bf86130bf7153023c81fc17a5b2b6a5d39be0777a7c8d1d731cc6bf805c04737063ada13f735025c79cd0d9ac56408c79113e12399018db8cee3b7cf06a8e629b30dac6cc41cb1f03d245f830392f989219a99ca2bb4af1423002b6e5479d9c7e578cf55b7843e4ca0d001a96cb50617674aab00e4d5f0d00aae274e20b78d04eb6c6561a6e7e29b8faee2deeef1f3d27d0dfac768a50904183cf28d1cfc20dbdedb77d0ddfe5bd1b0d1b55272fc0605d061b6aedf24ced4c56f7d9fde5bfb0c3d112af651122043b282baf643eea097387126de5f77d685b7b72434df0c11ca0eede8f5153cdb2d12defa6f9f9ff0af0ece7313b3b7729894cce965ac6fe489ade7f07397bc3144b0c1119e99e8bd3d4092ffc6686c22514a4d152d72ed5cf0027dc1966e487c0b017a073b030c57e0ee65e42e7b35d784c75103c09860de22165701c008956725edf3596966902964d412a2e5741e8561b8cded32acc4fcc4e3bf4c706c77181c5c7414c88bdd95b54d292827fb03732e66b4348c9c025fe795f47fa42306a312db4b3290860dd3450a67d9c493a568a9fbdb02fa68fe1bcab5eee28cf2159b3193f894dbf137142b30ca5028c075b1084f3fab9aa45a9709bfada28a92c682947ff988f80d99410cb1780ec3289457f3f4220abb66e8356aca5591a168c3634aa4c2cab05d764e2d2186ce43d0e13f58a50a70130de2d1e437ec09ae4e310d6a1b1e1db695e04e5200add6f2b369288c59142379bfec7cc914ab16e2e4f60ef7614abd5b95138ad01ce341b28c15d3c37761444c54f7e295a8679521dc98f0cd24fdcd658f493157553e553d074fd841fa9a989eeb9b4b86eaa3dbd480ee0dfd2cdab3b6a4bc9196a09ece4d5d69cfa2e1f9ae4495047cc77881ffdbad455cefae8174cf361ea6df9da524f42a8300213c78587580643b1a85b2189322b20193271ae127718b2719168e642c23c3cc6e5b395fb28a4b54f9788f19fba8d65369cd0c4175d07858563125eda17ad1e0e58e7b53cd1f7b430cbb7a1e1dfee76e1190287fd1059269333887ac49bac687ec046e754f0a1afc09d559cd911cf63fb3b2912ed977ed9f1326ce33198da1df431b5445b4f89072423343b2dc8313fd4e6c3346c4dd0d41e4f9678ce4d47e04ba08536ae86ca842af9ba94d15482e25f2325419ac8db1877e57033eb9925e58e92484b6184975d1d595d7585a7dc502e774718069022eb82666e11b305e5187825df31775bf8f7ff8b4226d20ce0b3200d47fdecf0247c147ed9bbd2e3056940de6a4c2d1645d5bf25e75f320172988a173b7d0a479980f80c965f8bcc26cc3ca8c4c9c46958dd9a47dbc4c236ff3aa0a0c68c943b31ec8651c58abf44cb0a7ba6d331682d3bc61933506b0e66720f78581878debc8aaed0e569c2e8f69b605289e5dda3942989b114e64dc430dd183517ca09c19aaa7a87dbc7a4c31384b2780501daff34f8a0045bfb21928641d8b75bad53ae5b51580c5293f2cd0a0878d314f3ebf8fe155c30a9cd4104def880cfbe98fc701b0c2a866b1b5b1b0a2af0dfb9a134ecf6c42effe8295ded59a629b8f193338ee4f1b5b66cf8d3d76a724df07300afea829fc26463735b4dec69198d86ccfc1b60d3f3c12da1b20d6a371642fd68453b402c3221472a4560a7c93ba61fa3969db4ad2763feae6d3dd0697e3872a5d382f557cc22ce56cc564a084f298eeca49d0d1a2c54428e94ce8ddf2f31b1b1dfd6e7c261bf1e5ee00c8db5f0aa0fe4e31475c37262e67908b609c60bfacd4c312db1e97c73bfdaf64f470f8fb50c170315dab82b66e14cc97c239b06ee55ab23b94bcb8c0c67d41af77ca82687c00895131649dd090ca46f94a5b1bfde64c16c9da7007be3221e18a5cbde18e921461434d3085a73cc7af1b8db102dc309af59526d57d9b5bcbb31017810ff7c6b53f62fd041f653d0221008abe617ce321d7fc2258ece1a0fb680723f85961321e7fcffe08d6bcce557ea94e1d54c7639e5855db671ea1a67d9d970c42999b5bcfaf55e3df00ccb9ff2cc71df1fef22319a22b4ba60a51ab218b4fd1bcd19ce58914110fe0d844a77142e0a0b74d19047075d4364ea0fedc9a4c48aa4d7c1e27a316abfdd33a1836bb4228ea0637afaeff7240c9266ecc879a70d60f59d7dab76b93542f1ea466980ce2f9b55b4e828e4629abbd5f9099d08c4ed37ccb0cb3ec381c037ccdac0061fbb98f7c68a8a686ea7f380ab8434d2725f9df214e5c113c19527027c55a8d28badf99224ad1675b49061f501cabc41dc3c1f967c2244e551b2a7972dd409b88408663a0c9580ccf0c32076b11bef4c5fbb0ad655db6b90623c603754f508b0daf30adcb11a87cc28d5b64e810ece6e1cdbb8666de5ede47c9c0daaf7527d4a4d3b19e4af22835964046e2a4b8e4703f5c35dce9e526a374aecd84d09ce9e4c7737ccf1dcfc3cc9daa6db4bbde1fcc74fc431d038b8ed515a8dc3b5b9d3187c2ea23141444353bb9a7fbb45a9ce16a4b1b6ca01ab2e8b2deb5cda238231c10a14ca45f7d2e7ea61ff451e4b4d116cc47c756bf176af72c43d3b26c372773824099fa775d4ded525375fbb560f33fb39def4c2ef482b3cd56dccbfc82a5d8bb2c55b36c23a0d2c86b36ede18d5e64fec34bc541a8764847aceecf3e3ebbd7179b65053a93b1f9f1f2e1532517cfe2e10df42cd8a334d19fee95fd11278a7b6620c4bda53a793f81e4720615273c5c5f82cac01cfd54b9bf5d62fa25ae898aaaf2a1830ec1505aebd9876f6cf538eca6f9d213d2ef9eebb0d3d3fb16b98a3de40350c5deeba68dfb48793a4089df5a901fb39c271f9769ab58d19878577a6d15804a6da69f342acfa0e40f5e952fd35b79ba728b0646185115692bcb9503ad0f1a22cb62bd3eb44f3baf087ed73e9bd6c775a3e4a65d68ecc4619ea1b1e53232bcace5441f36fa1f496ffe78aa4ee81f4859d812a537b55b51da803052306693ae44812777f5d9b3b2278ee853980102879c053f20aa6c69cd8548ae563c361fbb60fb522247612d470acf4a458689cde4b9e07b460ed49a86d2d323bbdea4a5f0932f83df4652501f8127504f4b0c4f4226cc15d9f27f6f645f5c45fcc4c16ff9c1860b869dbefd36303802ab3ef0e0730548dca8e58105485d659b4bd53a29bb071b3b03c4f15a504e3e19db51ffadc9b6b2604dad3a49357fc00751529d204afac7f5348646db7e5a62f50f8c691b72bf5fdeb2b11ab69078bedff5fa38e1aa7ddec61ce19e857f7b3962f90a4cf9e50aa2fac92a9a9001d5372b8ae3ba747db243489bf8d11862a41daa44d4f9c6e6565c2700e17685c997106e447785914fb0dea3b3e2cc886a6349b3c05ba1d8a150ca1dc136e4e87a85463b22d39c2c4dc33da3b13d67b3b441ce501c762082935594cad3205d7cdc2aa043e2e1ca92c9b6402855890818a25311df736e14100609da971b931d81fc08a5c09c8f9c059e2ca7c93b92049ac5aa7f6903a0393bedce19f3a922f9454a6c52c7f53568a5d7764c5f2dc4c14b435c38fd64fc6caedd88bdb71d01f47bee7f8b0679754702f6ba0c88ab5ce43d7bf5c07b5880be5a4a69d683d36c2e2300cf12ef3c8b20453e42890078eb8c5c4157b249c491dd55f44f5446f6bedde73cadf6649a1bfc5b568aa4a647441ba179deb0bab1cdc7c63fe881910bb0b6757269c230089e1597a7ea9b283735511ddc7925eedc6ff1c20a2030719c34e2a9a30de93b6603039dde8f4a1ea60c4eba3600aecdd8d3052702f206a85e9be9d777ccca9a1af87ea9e981f027018b8d01139f2db44c85fddb711bbdd1606f8cf388068cbd692c07efd69309c075db63a99a76d924be1160b55a998b4d217bcbf8ceea4bb90861d6c8590046e40fe75e07cd65f0288a0dd99e9238a5757532e646567228d280d8de6a2070d19a1c7a1ce42c2cb8545becf1116ec8bfa9a67b93c2e6d8bf5ec28379fcfabc1e99f15f8b7dcc6a9fd7b80e1eede3f2d247cea6673f1f0b40d88e5cd49e413f6be6a71c3d9c58d83fae2aa99d8e7b0d324ad8826724126367924995f3d11700d25e3f06d3d39b32c38311c8c4c5f31ed6295ca7fa3949fdaf6eb44a3eb493115cd2e6aa602a2d93d949088080d59651990bb6ba9204e35227f7e7732115b3b6ccc4b7efb56ce7911372a82d4100e01803262702f67b1976fdeb66a5c9e4acd45950db8d534891d357340a0d3e882640f2294bc9077443f44cf6a98a6d442a20922a197ab642bc391f7f68360f58eb83f4e5b577c950104b2fbb9411e82e93c69779d2626811288d87e1e84c56a1d71417f422e9f3474c5c22331ec470455b61b88df39a25aaebb6d8e75dcc4980fa989286f67a522e5c81ae6f1e11f94460d596b8da7598d18f05c4dde032eb7828ed8ede2d5ff532ad51c9067e8670aab36b656ae4e0a7ec9b24a6fdcb1a9aba8814fb77722c902947114b020c18710ad9ce87326403d5854f9d3ad854c46cf2e2e3bbdf7db19e67a16e4ef9bfa71f633ce11fd525810925a734a72f5e42877f122a901182a8d073c06c7a9951c2b7c91dd8839fab887a9e5c779774aa4f1533684e640aaae86e27d3196c18ec29ba94dbc87a0b6a171c956f6cd776805f0b3df6171894cac81d4e6ea73ed5cb28a4b225dfce734dd30ce8f31ddbf67aa1503530b8eb8a97c78da1fb458a9936b39bf24362b64bc72d46380b515559b728c4f800e6f54f580eb6e7a19f9792e14973a2419aa013f3315f43925ab1a6ff91a113d2590f7db78f3ccf5a655f6c66a54e934bb65c72f042ed1559b88b63af0ccd466f26a4b81e242053ae9bb121af6e920b7f8b58a0b5857787c0c240653fec32b4b5d9738d380b64492edeb53c31aec01f720a8e275566f9022bc5536b4c68b7968f986e655d701d58c7ef42dc9f402330b86c343ca5b5432e3ce3d3b04b7ae1a5f90730ea09f509edd4a62891d7c7984d806854a9f68629a41417089cca0cd19cb8557aa605e3775bc5eed1e230aa3cc423fd34ded34e1a21627e45aef13a8361e1ed3886d61d6a10f994b2cfef2d9cee3b6b9015f62f8c82371f24498ff319b22452ebb4c313cdf55dccd9a9f4dc3a6871d6e1d776bc244e941c407a955aeca7fa1eaace9baf2c91e342c34e6cd4277369d614af3498a3e43d059ab9c7782e79b303622e09903f840a37c4018739167161074fcbf371d74427f3ce798c318a687ca5d38767420d30d71f6e8e70a2551a67f4185597565778bee38e3d76ba9a0792edfdc39ed77eeb6312850bb91e0b2bd6a53beeab4da6754a42b1eed57084bac636db898f979bf35162e9a6c30381865c1a153a92e91f26317686d43ed1edc491b00a874a6356feb8773c7ed912989a7a55b959a7d0fb992d7d9f2694c10dc67de345d5afe64ee31d599d5d31c57052cc07a556711c610cbce79187bc22e24e3fe699d1bd40e61a7878f37ae17e925ece4b8972b4682e3a5627a519fc0c579002f6b4de391332569b15a80b61144140728eda868000fb6e2e8dcfc9242fbee7cf898dd98b05de09cf95fb3184ce882ad002037e05d15233b1e00308aa3a6c896bbfe13e66d045fee152b16f4d14c43fe66dcec765cc7a65f2455c2d0dc41f430f59e5da316d37fce4874183cde002c9493ffee14ef639d68d42ef5b64fe92e0a85817371c29edc7fa4bae8a2ba70f4c28098bfeaf1808ec2919008caf6808208f69c54748dc7c87b38dcf99e73487e342eb43cd5f8f77f5b9c0bf52b3ab318f2700ec24342dabe4877c701d1764b0f647628ac9e50c1431c030a22a855f937e5d4ceccddde0a8ca53f97dbb49797c6ba7c499d73dfe78aca0121425af0a8594836367fff18ed69c375c15dfbbb39fc083e3e95196ea021783e6f7e015b6e7b3cfa7551ab47bfa3d1fc72a03a7817b6385e7f5f6451d03c9dcf700c1cb9f8096c19cc22ba6589d166dd0f234a7173b35b8af53cf6a197ce0e4f507a96896836ef25c96e25b76db4f9c62a047bac68d2c2304714ab69036f40950b1dc04ac360708bcc634f71e5fe375fb88e07fdf60d2007fc841958b1f0ba7430451c1e17afb7f7f7dd2ad89c05e5a4b0f2d924e274adae5dbb7843c85eee5af5b2000ea133e474e5095749f8408394eb76dcbad930f37a85edb3f44502ab302995ee44341c6afbe20081b8bbffa650a7fbc5b9452ce1253b7eb2c491367fb1142db97733998c4059223f445f340b71e0b2448d28703fd0d09a7d513b42a1ce791b936a50cfd2de6ecd64aa886d03765fbe2848536b72090dec03706b764dbba803400a72c4fdd152393d18111ab76118a8424a140db1abec37103b78b17820db800d30277de6b4f8a121257ec51c6224d5a028b6beca8569f92027b54d931365d095e51a8808be1bea1e84a884f9d6673b3552d31b4ab2a9bc02f2b8cecca5c6af0a23295b3bb7b1fd4686fc71ab811298bba3ef1599d8115a1bb45de57b3ae46f01d41dc81c52e00736a79609ef3113adab8e59a622177ace1a0898a2fdfb3b0ea3fcf0239471354dc4bbc0c69d110fcbcd1fc72d0fe8c159de2175684359201e042e385ea0a3ab2ce016d158bde86216bf52d9a78a488883261b49209b371e5a632c181cd0c51149f6f93343a33255e2cf2ad58d55c11ff19baad6e5ef76df9dfb3ad2caa246fdfe2806e2410c51aa99b1707ce65479160f6bf4759b0b930156dc46c94e392930f05fbee38bf9e24074a90c5d0f3115667b428579e681da812c6958ba3229d6bc2d4b039bf4c8e340cbd99f5e0d890ce50343024ceeb493e68b4f5138779b9743a1ec3ebfd2fee9a498039c62bd20c51313caddf766e7fb159403f9be97966c21780c4a5d12465ef167787b4933aec87a231eac8d569eddcc7ee8ccae18b73eac4d57218194036c3b87802e2fb9c94ce3cdec2c26a15204942c844fcbd7b275a46ff3eaa722048c2c3ceccdfe955c58fe8e9656912f9642ebdbc77c1f9c2c940681c02e5839738fe5c2ceb4d58ee1570f1d326709636a874b886cb99535e656293d288cd01d5e384fe56a638556a7b1f11e5d8913436e82ca1936686b325dcecc95e85a26b3fa7d8e70bdfc803f045e3a99ad5e748ce027914646ec6d89fe6cedd706c495f9c0c7a818ea8331805677e4e56a12a331a39b3be6e11db2b92f55aa25441dac4ffa28f1ac860d0854a8def6318bb82b760a1578e833e3609e04b1a6e4fe4aafc1eea1be66e69d4e8844f8f85e4fa6b34dba46cb40740809395c46bb3091210f055709e708dadbd1072180bb3bd7a4b8364945137ba23a1cb602d789efb3bca327ed32f55ca3aeb2cb9c7ee8eab799aa9c2955b68a6e4b6efdeff5701c7816d35ff2a4b1249281250123f855d7ad3611d7cf5255473b0fc582d48efeefd18663f2e241a910a00bab372830459541b6cdfeb97cc6b28f601fff63fe3b74204b87178f96c3021baab1ab5035b2ddabb300273787a4bed93d71cd9bd316290605798bc66f28079a660a20fbcaa851d909c9c7beac31772969e1502166bb13ba0725b4d2146e8bfce1733bebd3c1bfe38ab119d03affdbfedd1474eeaa9e8babc81f92b318d144819acbc482839364ad62593d3dffe3fc9c9f15ab431ed129590630f6d8a60696c8f3c3abe4a4f03e80274af81247f3ab4dd32a5d84f6e4b8537fbc2967a45205e5671635ba9f9b1180d22cf4ef8f924bb87177b55abbe579949620b3e19fe0b4362ce53807739ddb739e38c0494711ca906b11fcab22c8bb8fb9b826956c35bbad250857398760d07f30861cf6a3f7fb5b81626c9b53e25f9b1a559728fd309f636b8eecf85b090d495e8f4a330d65c7d16be813b03b52b80d31de8da8336d02aab9859212a1a8fd3ef6f4241487f33a3476fa8a879fd33daa3d4bea55f8e4204df9ed10ef9b5047de8bb5b4dee216983765ec0c690d0c53ed17530d5ebdc4a288752f14ae16fa0364a72fbbe89752d933d286ebe94f743d9d6f1928f858a7d125d52d350466b2e0a5ebc3547320cf8f3dc54770ea4c1927afd84dd249810e83faf7fceba53fd280d2f7bdc8ccdc840f7859779aeadd771cf6336a005c423f9a34fbdcd3827dafcba495728b3fd233f9c6a9204af1a4830b6ea7affa453206bb3ed9c0b82515d6a66ed2d16cd76a5788d549118b8ac85d33c5d8084c4e2ae628bfa5b428b6e5d3965c1298f5a532569c545d8603c85adb56d7a1c2e4c38b478a7b6eac40d51d0e69356b7e7fc2db0c437fe1285523bf86cbfd04bc58bb81d38e8df9fac60c0dc5c82570dc21dd42a63b3214e4370e69dd7ca611a204f0ff9ae43100c885e7023fd2a52bf650bcd6eb83f5f3c51f1393cfe5318a1d148d4244a5c0f20943a27ef6143160535bc274ac3d6ef7373fada9c8bec26ec1284f7ab100ab8a4b99813db042c150b0d093002cafbf53a0563839d1ce6cc10f905a3396733b4893a856986884948a452e42e4a3f48edc6041136c1a7d9dd95f6f280ea303290549957659fd097951c1ce007f08806874fd26c09b1d6f9ff9559cc8cd0317901d7016818fbfaa1145bc9bf01539726f6f2e0b74fb9f8ec75fe2de6f27ba55176129ccce7b9087ee2b141b1b14219661c543a87de293109606f515c46830439d24a1d369e79b43a284e475da909318205756753e5c96a35a1e709ac2f24b2669f2bf5c8c4a35f186954cd8bb5715636ff8f11bf4506e990a148626ad4cc07e90889d6a41c8c2064c0f8b886164c3d76e71d9088a38d5f0733e8168224c0918ff4a26c51b125c6853ed832b6c9f1c142b3b9dce244f0c6d1db18b57808f171e8c2e91dcbe1c2878257d27c74c94ee24fc9d450fa2e9bfce55d0da720cd4601fe5734caa967fc28ef318ecd0c8873c295608bc75b8899865f1319ca157daeb7ddcee9c28560f5d7bb9b0737e66777fa81c210d16c6acbec95dfe934e42f22dba6dd61496bb41ab768fcc60a647338329425fcf353ee324727ac35113b9cfb0157e14be0e70fe14ce18692b2bc3824aa31128c50d29a99ee332a177ef1d13c3fc39a62356e5189e5e0b9de9b24293ac5980309945c11da10496eb1f5ea8dc816f89b2a253bac93ba19d8b07ae7fd64492e9b548759053fb28d7fa168381978ad41d7e3ce3dde914ef2b215f2f55c18e70c8c364da66527b496ad993a291fc7c1104c69f11dfc4b55f1466671692bdc09337a81942b71b8935443f59ce20202e3e1d16d2e0d0dfe4c9797998cd34d5d9a1b08b93622f7f3735cd9f3cbd004bf6c1d9</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>stock</category>
      </categories>
      <tags>
        <tag>选股战法总结</tag>
      </tags>
  </entry>
  <entry>
    <title>B端产品的体验设计方法与实践-理论篇</title>
    <url>/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/</url>
    <content><![CDATA[<h3 id="B端产品概览"><a href="#B端产品概览" class="headerlink" title="B端产品概览"></a>B端产品概览</h3><ol>
<li><p>C端、B端产品的区别</p>
<p>要想知道C端和B端产品的区别，先要了解到人性宗罪，要用辩证的角度去看待。</p>
<a id="more"></a>

<p><strong>人性七宗罪</strong></p>
<img src="/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/人性七宗罪.png" style="zoom:40%;">

<p>C端产品其实说白了就是解决个人人性问题，对比美团和饿了么APP，是不是想我人性的懒惰？对比什么抽奖，0元购，彩票等APP，是不是想到人性的贪婪？</p>
<p>说到B端产品，那么我们常用的B端产品有哪些呢？你能举几个例子吗？</p>
<img src="/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/B端产品.png" style="zoom:40%;">



</li>
</ol>
]]></content>
      <categories>
        <category>product</category>
      </categories>
      <tags>
        <tag>B端产品经理</tag>
      </tags>
  </entry>
</search>
