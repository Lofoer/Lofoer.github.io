<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何创建属于自己的个人博客-实战篇</title>
    <url>/2020/04/27/hexo-2020-4-20-createblog/</url>
    <content><![CDATA[<p>趁着这次疫情在家自己搭建了一个个人博客，针对于 NexT 主题进行了多次优化。下面我将自己搭建的过程记录下来，为想要自己搭建博客的同学提供参考。</p>
<a id="more"></a>

<h3 id="1-开始搭建我们的博客"><a href="#1-开始搭建我们的博客" class="headerlink" title="1. 开始搭建我们的博客"></a>1. 开始搭建我们的博客</h3><ol>
<li><p>准备条件</p>
<p>首先我们得需要自己注册一个 Github 账号，地址为：<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> ， GitHub Pages 帮助我们来架设一个静态网站，这就解决了服务器的问题。</p>
<p>Hexo 这个是一个博客框架，号称是一个快速，简单和签那个大的博客框架。事实也是证明如此。</p>
</li>
<li><p>新建项目</p>
<p>在 GitHub 上建立一个<a href="https://github.com/new" target="_blank" rel="noopener">仓库 </a>，Repository name 初填写 {username}.github.io ，假设你的账户名师 zhangsan，那么这里就是 zhangsan.github.io 。必须以 github.io 为后缀结尾。</p>
</li>
<li><p>在 GitHub 上配置 SSH Key</p>
<p>生成本地密钥：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>进入到本地密钥的存放路径：/Users/ 用户名 /.ssh/ ，公钥存放在 id_rsa 文件中；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat id_rsa</span><br></pre></td></tr></table></figure>

<p>复制 shh 公钥，添加到 GitHub 中去。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/add_sshkey.png" alt="ssh公钥配置" style="zoom:35%;">
</li>
<li><p>安装环境 Node 、Hexo</p>
<p><strong>安装Node.js</strong></p>
<p>首先在自己的电脑上安装 Node.js，下载地址：<a href="https://nodejs.org/zh-cn/download/，可以安装" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/，可以安装</a> Stable 版本。</p>
<p>安装完毕之后，确保环境变量配置好，能正常使用 <code>npm</code> 命令。</p>
<p><strong>安装Hexo</strong></p>
<p>接下来就需要安装 Hexo 了，这是一个博客框架，Hexo 官方还提供了一个命令行工具，用于快速创建项目、页面、编译、部署 Hexo 博客，所以在这之前我们需要先安装 Hexo 的命令行工具。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化项目</p>
<p>接下来我们使用 Hexo 的命令行创建一个项目，并将其在本地跑起来，整体跑通看看。</p>
<p>首先使用如下命令创建项目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init &#123;name&#125;</span><br></pre></td></tr></table></figure>

<p>这里的 name 就是我们的项目名称，我们这里要创建为项目名为 Blog 的博客，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>这样我们的文件夹下面就会有 Hexo 的初始化文件。</p>
<p>接下来我们首先进入新生成的文件夹里面，然后调用 Hexo 的 generate 命令，将 Hexo 编译生成 HTML 代码，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>这里也可以使用 hexo g 来简写。然后我们利用 Hexo 提供的 server 命令把博客在本地运行起来。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>此时访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 即可显示出 Hexo 默认的主题信息博客。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/hello_hexo.png" alt="hexo_index" style="zoom:50%;">

<p>那么此时我们的博客架子就已经出来了。这里关于生成和本地预览可以使用命令 <code>hexo s -g</code></p>
</li>
<li><p>常用的Hexo命令**</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/hexo_command.png" alt="hexo_command" style="zoom:50%;">
</li>
<li><p>选择 Hexo 主题：NexT</p>
<p>关于主题目前 GitHub 上有两个版本的 NexT 主题</p>
<p>a：git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>
<p>b：git clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> themes/next</p>
<p>第二个是目前 NexT 的官方版本，会持续进行更新，所以我选择的是这个版本，关于对于 NexT 中的个性化设置也是基于此版本进行的。所以推荐你使用第二个版本。</p>
<p>进入到项目文件夹 blog 中 <code>cd blog</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>执行完毕后在 themes 文件下，有一个 next 的主题文件。</p>
<p>修改我们项目目录下的配置文件_config.yml 文件，找到 theme 字段，修改为 next 即可，修改如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>执行：<code>hexo s -g</code> 即可生成静态页面至 public 目录下，并且可以进行本地预览。</p>
</li>
</ol>
<pre><code>那么到此我们的第一步就已经完成了，喝口水，休息下，让我们来准备好下一步的配置吧。</code></pre><h3 id="2-个性化设置-NexT"><a href="#2-个性化设置-NexT" class="headerlink" title="2. 个性化设置 NexT"></a>2. 个性化设置 NexT</h3><p>​        <strong>修改前需要对项目配置文件和主题配置文件有一定的了解</strong></p>
<p>​        我们针对于主题的个性话设置全在主题的配合文件下</p>
<p>​        <img src="/2020/04/27/hexo-2020-4-20-createblog/next_config.png" alt="next_config" style="zoom:50%;"></p>
<ol>
<li><p>选择NexT的样式 <code>Scheme Settings</code> scheme: Pisces <code>sidebar:</code> position: left</p>
</li>
<li><p>代码块调整 <code>codeblock</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">codeblock: # 代码块特效</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme</span><br><span class="line">  highlight_theme: night bright</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result.</span><br><span class="line">    show_result: true</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>
</li>
<li><p>阅读进度百分比</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true #显示阅读百分比</span><br></pre></td></tr></table></figure>
</li>
<li><p>github_banner 显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https:&#x2F;&#x2F;github.com&#x2F;Lofoer</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="5">
<li><p>添加Valine评论 <a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">https://leancloud.cn/dashboard/applist.html#/apps</a></p>
<p>为什么会选择这个评论呢，一个方面就是界面简单，第二个就是配置起来也超级方便，因为我们的博客是静态博客，那么对于评论的数据来说是动态的，需要存储的，那么我们就需要借助一个平台来存储评论，这个时候我们通过 LeanCloud 这个网站来进行，注册应用后，会有 appkey &amp; appid 我们只需要添加授权码和 ID 我们的博客就有评论的功能了。非常简单。</p>
</li>
</ol>
<ol start="6">
<li><p>添加分类页</p>
<p><strong>分类页</strong>    </p>
<p>分类功能和标签类似，一个文章可以对应某个分类，如果要增加分类页面可以使用如下命令创建：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>然后同样地，会生成一个 source/categories/index.md 文件。</p>
<p>我们可以自行添加一个 type 字段来指定页面的类型：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<p><strong>添加文章</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new hello-world</span><br></pre></td></tr></table></figure>

<p>创建的文章会出现在 <code>source/_posts</code> 文件夹下，是 MarkDown 格式。如果你对 Makedown 不了解的话，那么先百度下啦。这里的编译器我推荐用 <code>Typora</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-04-19 01:23:51</span><br><span class="line">categories: hexo</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="7">
<li><p>添加搜索功能 hexo-generator-searchdb</p>
<p>搜索页需要安装一个插件叫做：hexo-generator-searchdb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>在我们的项目<strong>hexo_config</strong>目录下配置如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure>

<p>主题<strong>next_config</strong>的配置文件下修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="8">
<li><p>侧边栏社交链接 &amp; 友情链接</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/social_config.png" alt="social" style="zoom:38%;">

<img src="/2020/04/27/hexo-2020-4-20-createblog/links_config.png" alt="links" style="zoom:50%;">
</li>
<li><p>显示评论数</p>
<p>打开 <code>themes -&gt; next -&gt; languages -&gt; zh-CN.yml</code> 在 POST 标签下 comments.valine: 评论数 #可以自定义</p>
</li>
</ol>
<ol start="10">
<li><p>添加阅读时长 <code>npm install hexo-symbols-count-time</code></p>
<p>在我们的项目<strong>hexo_config</strong>目录下配置如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 阅读时长</span><br><span class="line">symbols_count_time:</span><br><span class="line">symbols: true</span><br><span class="line">time: true</span><br><span class="line">total_symbols: true</span><br><span class="line">total_time: true</span><br><span class="line">exclude_codeblock: false</span><br><span class="line">awl: 2</span><br><span class="line">wpm: 275</span><br><span class="line">suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p>主题<strong>next_config</strong>的配置文件下修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="11">
<li><p>打赏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward:</span><br><span class="line">  wechatpay: &#x2F;images&#x2F;wechatpay.jpeg</span><br><span class="line">  #alipay: &#x2F;images&#x2F;alipay.png</span><br><span class="line">  #paypal: &#x2F;images&#x2F;paypal.png</span><br><span class="line">  #bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class="line"> </span><br><span class="line"> reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 您的支持将鼓励我继续创作！</span><br></pre></td></tr></table></figure>

<p>打赏设置 <code>comment</code> 是打赏的提示语，打赏的图片可以放在主题的 images 下。</p>
</li>
<li><p>图片显示</p>
<p>图片显示，目前有很多是通过第三方的图片云来进行图片的存储，但是目前我这里是通过 Hexo 插件把图片上传到 GitHub 上进行显示的，从效率上看，使用 Makedown 来添加本地照片就能显示。下面就开始放大招具体说说怎么做。</p>
<p><strong>第一步安装插件</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p><strong>第二步打开 Hexo 配置文件</strong>_config.yml</p>
<p> 找到 post_asset_folder，把这个选项从 false 改为 true</p>
<p><strong>第三步修改 index.js 文件</strong></p>
<p>/node_modules/hexo-asset-image/index.js js 文件 替换如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line">     </span><br><span class="line">     &#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">     function getPosition(str, m, i) &#123;</span><br><span class="line">     return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">     var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">     hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">     var config &#x3D; hexo.config;</span><br><span class="line">     if(config.post_asset_folder)&#123;</span><br><span class="line">             var link &#x3D; data.permalink;</span><br><span class="line">         if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">         var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">         else</span><br><span class="line">         var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">         &#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">         var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line">     </span><br><span class="line">         var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">         for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">         var key &#x3D; toprocess[i];</span><br><span class="line">     </span><br><span class="line">         var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">             ignoreWhitespace: false,</span><br><span class="line">             xmlMode: false,</span><br><span class="line">             lowerCaseTags: false,</span><br><span class="line">             decodeEntities: false</span><br><span class="line">    &#125;);</span><br><span class="line">     </span><br><span class="line">         $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">             if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">                 &#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">                 var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">                 if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">                 !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">                 &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">                 &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">                 var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                     return elem !&#x3D; &#39;&#39;;</span><br><span class="line">                 &#125;);</span><br><span class="line">                 var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                     return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">                 &#125;);</span><br><span class="line">                 if(srcArray.length &gt; 1)</span><br><span class="line">                     srcArray.shift();</span><br><span class="line">                 src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">                 $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">                 console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;else&#123;</span><br><span class="line">                 console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">                 console.info&amp;&amp;console.info($(this));</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">         data[key] &#x3D; $.html();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure>

<p><strong>第四步使用</strong></p>
<p>当我们使用 hexo 命令新建一篇文章时</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 文章名</span><br></pre></td></tr></table></figure>

<p>在 source/_posts 文件下会生成一个后缀为.md 的文件和一个文章名的文件夹，我们在这个里面上传图片。</p>
<p><strong>第五步使用图片</strong></p>
<p>在 Makedown 中引用图片时候，注意文件路径节点是用文章名开头的相对路径，并不是图片的绝对路径，这里一定要注意。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/upload_img.png" alt="create_blog_solurl" style="zoom:60%;">

<img src="/2020/04/27/hexo-2020-4-20-createblog/upload_image_example.png" style="zoom:50%;">

<p><strong>图片使用相对于当前文件夹的图片路径。</strong></p>
</li>
</ol>
<ol start="13">
<li><p>修改详情文章的tag图标</p>
<p>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索`，把#号替换成为 {i class=”fa fa-tags”}{/i} ‘{}’ -&gt; 替换为’&lt;&gt;’</p>
</li>
</ol>
<ol start="14">
<li><p>全局调整字体大小  themes\next\source\css_variables<code>下的</code>base.styl</p>
<p>具体的修改内容如下：有需要的可以自行调整。</p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/update_css_font_config.png" style="zoom:50%;">

<p>到此为止的话，我们关于 NexT 的这个主题的个性化修改目前就到这里了，目前的这个阶段已经完全满足了我们的博客的内容展示。后续的一定内容请一定要参考官方的修改配置</p>
</li>
<li><p>取消文章目录的归纳数字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: false</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: false</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>

<p>将number: 属性的true 改为 false。</p>
</li>
</ol>
<h3 id="3-ToDoList："><a href="#3-ToDoList：" class="headerlink" title="3. ToDoList："></a>3. ToDoList：</h3><ul>
<li><input disabled type="checkbox"> <strong>待验证文章页面展示是否有效</strong></li>
<li><input disabled type="checkbox"> <strong>自定义域名 &amp; 域名访问 ：</strong>目前通过注册域名和域名进行解析后，访问速度没有直接访问 lofoer.github.io速度快，所以暂时不跟博客进行绑定了。</li>
<li><input disabled type="checkbox"> <strong>文章加密：</strong> 参考 <a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></li>
</ul>
<h3 id="4-部署到GitHub上"><a href="#4-部署到GitHub上" class="headerlink" title="4. 部署到GitHub上"></a>4. 部署到GitHub上</h3><ol>
<li><p>关于部署我们需要知道我们的部署地址：它需要对应 GitHub 的一个仓库地址，这个信息需要我们配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;Lofoer&#x2F;Lofoer.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>目前这里的 repo，是填写我的，后续需要修改成你们自己的地址。</p>
</li>
<li><p>安装 Git 的部署插件：hexo-deployer-git</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完成后执行部署命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<img src="/2020/04/27/hexo-2020-4-20-createblog/hexo_blog_img.png" style="zoom:50%;">
</li>
<li><p><strong>设置部署脚本</strong></p>
<p>在项目文件夹下面新建一个 deploy.sh 的脚本文件，内容如下：   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>这样我们在部署的时候只需要执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh deploy.sh</span><br></pre></td></tr></table></figure>

<p>这样我们写完博客后可以完美的更新博客了，非常简单。你学会了吗？</p>
<p><strong>特别说明：</strong> 每当我们完成了一个小的个性化设置的时候，不妨通过hexo命令在本地进行预览<code>hexo s -g</code> 看是否达到了自己的预期。</p>
</li>
</ol>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li><p><strong>关于Hexo的问题：</strong></p>
<p>一般我们在安装hexo 插件的时候不会出现什么问题，但是有时候就是安装不上插件，这个时候一般使我们的源出现了问题，如果你对源不了解，没关系，按照我的操作执行，都能解决。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>或者在安装插件前加上 <strong><code>sudo</code></strong></p>
</li>
<li><p>关于4000端口被占用问题：**</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo lsof -i :4000</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">COMMAND    PID   USER   FD   TYPE             DEVICE SIZE&#x2F;OFF NODE NAME</span><br><span class="line">Google     796 vivian   24u  IPv6 0x3f05d2f78b8f93ed      0t0  TCP localhost:52958-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   26u  IPv6 0x3f05d2f78b8f8e2d      0t0  TCP localhost:52959-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   30u  IPv6 0x3f05d2f78b8fbc2d      0t0  TCP localhost:52960-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   39u  IPv6 0x3f05d2f79de69e2d      0t0  TCP localhost:52961-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   61u  IPv6 0x3f05d2f79de6a3ed      0t0  TCP localhost:52962-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">Google     796 vivian   85u  IPv6 0x3f05d2f79de6af6d      0t0  TCP localhost:52963-&gt;localhost:terabase (CLOSE_WAIT)</span><br><span class="line">node      2658 vivian   39u  IPv6 0x3f05d2f79de6d1ed      0t0  TCP *:terabase (LISTEN)</span><br></pre></td></tr></table></figure>

<p>注意看node，就是这个PID端口 2658，如果释放这个端口？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">kill -9 &#123;PID&#125;</span><br></pre></td></tr></table></figure>

<p><strong>{PID}</strong> 替换成你的被占用的PID号</p>
</li>
</ol>
<p><strong>结束语：如果您通过我这边文章成功创建了属于自己的个人博客的话，那么不妨通过下面的打赏按钮对我进行支持！谢谢。</strong></p>
<img src="/2020/04/27/hexo-2020-4-20-createblog/640.gif" style="zoom:5%;">

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>创建个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>如何发布文章和管理我们的文章-实战篇</title>
    <url>/2020/04/29/hexo-2020-4-29-postarticle/</url>
    <content><![CDATA[<p>在开篇前呢，说说如何管理我们自己的文件夹，管理文件夹其实也是一门技术活，管理的好，能够提高我们的工作效率，也容易积累我们的知识内容。</p>
<a id="more"></a>

<h3 id="文件夹的一级分类"><a href="#文件夹的一级分类" class="headerlink" title="文件夹的一级分类"></a>文件夹的一级分类</h3><ol>
<li><p>三、五年内文件夹不会发生任何改变</p>
</li>
<li><p>目前使用</p>
</li>
<li><p>知识积累</p>
<p>可以按照项目对应存档的关系进行管理，所有的项目都是有一个项目周期的，长期会使用到的放到存档中。</p>
</li>
</ol>
<h3 id="二三级：时间轴方式"><a href="#二三级：时间轴方式" class="headerlink" title="二三级：时间轴方式"></a>二三级：时间轴方式</h3><ol>
<li>年份为二级</li>
<li>月日为三级</li>
</ol>
<h3 id="存档（长期）"><a href="#存档（长期）" class="headerlink" title="存档（长期）"></a>存档（长期）</h3><ol>
<li>不是项目（运营）</li>
<li>长期使用</li>
</ol>
<h3 id="二三级：专题方式"><a href="#二三级：专题方式" class="headerlink" title="二三级：专题方式"></a>二三级：专题方式</h3><ol>
<li>专题为二级</li>
<li>定制为三级</li>
</ol>
<h3 id="数据的备份"><a href="#数据的备份" class="headerlink" title="数据的备份"></a>数据的备份</h3><p>​    有一个好的数据备份是非常重要的一个习惯，他能够在我们帮助我们在短时间内快速找到自己的数据，备份日期：一周备份一次</p>
<h3 id="文章发布需要一个好的分类和标签"><a href="#文章发布需要一个好的分类和标签" class="headerlink" title="文章发布需要一个好的分类和标签"></a>文章发布需要一个好的分类和标签</h3><p>受到管理文件夹的启发，那么我们如何来发布和管理好我们的文章呢？</p>
<p>在博客里面有两个菜单，一个是分类，一个是标签。这里我把分类当做是我们的一个一级分类，标签是一个二级分类。</p>
<p>举例：比如我们要发布一篇关于使用Hexo来创建博客的文章，那么这里的 <strong>categories</strong> 就是Hexo ,<strong>tags</strong> 就是创建博客。</p>
<p>我们的文章都是通过Markdown的格式来进行写作的，优势是非常的明显。那么如何快速找到我们的文章源文件呢？我这里用到的就是一个时间，</p>
<p>源文件按照 时间-分类-标签的来进行发布</p>
<p>下面进入实战演练：</p>
<p>使用Hexo命令来创建文章</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 2020.4.29-hexo-createblog</span><br></pre></td></tr></table></figure>

<p>那么这个时候源文件就是按照时间-分类-标签的方式来进行显示了，同样的一级分类都在一起，也可以使用专题的方式来进行命名比如。</p>
<p>又经过思考后我觉得还是通过专题+日期+标签的风湿可能是最好的。</p>
<p><strong>结束语：如果您通过我这边文章成功创建了属于自己的个人博客的话，那么不妨通过下面的打赏按钮对我进行支持！谢谢。</strong></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>发布文章</tag>
      </tags>
  </entry>
  <entry>
    <title>B端产品的体验设计方法与实践-理论篇</title>
    <url>/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/</url>
    <content><![CDATA[<h3 id="B端产品概览"><a href="#B端产品概览" class="headerlink" title="B端产品概览"></a>B端产品概览</h3><ol>
<li><p>C端、B端产品的区别</p>
<p>要想知道C端和B端产品的区别，先要了解到人性宗罪，要用辩证的角度去看待。</p>
<a id="more"></a>

<p><strong>人性七宗罪</strong></p>
<img src="/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/人性七宗罪.png" style="zoom:40%;">

<p>C端产品其实说白了就是解决个人人性问题，对比美团和饿了么APP，是不是想我人性的懒惰？对比什么抽奖，0元购，彩票等APP，是不是想到人性的贪婪？</p>
<p>说到B端产品，那么我们常用的B端产品有哪些呢？你能举几个例子吗？</p>
<img src="/2020/04/29/product-2020-4-29-B%E7%AB%AF%E4%BA%A7%E5%93%81/B端产品.png" style="zoom:40%;">



</li>
</ol>
]]></content>
      <categories>
        <category>product</category>
      </categories>
      <tags>
        <tag>B端产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title>产品经理实战篇-规范信息架构与流程设计</title>
    <url>/2020/05/07/product-2020-5-7-%E4%BF%A1%E6%81%AF%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h3 id="1-认识产品信息架构"><a href="#1-认识产品信息架构" class="headerlink" title="1. 认识产品信息架构"></a>1. 认识产品信息架构</h3><ol>
<li><p>什么是产品的信息架构？</p>
<p>官方：信息架构设计是对信息进行结构、组织方式以及归类的设计，好让使用者与用户容易使用与理解的一项艺术与科学。</p>
<a id="more"></a>

<p>信息架构：就想一个产品的图纸和规范，有了它我们就知道我们的产品应该按照什么形状和规范来进行生产和设计。</p>
</li>
<li><p>为何产品需要合理的信息架构？</p>
<p>合理的信息架构，可以让我们的产品非常容易被用户理解，可以让用户在第一时间就对这个产品有一个简单的认知。通过下图，我们能够一目了然这个产品是用来做什么的。</p>
<img src="/Users/vivian/Desktop/github_blog/source/_posts/product-2020-5-7-信息架构/为何产品需要合理的信息架构.png" style="zoom:35%;">

<ul>
<li><p>合理的信息架构能够让用户一眼就明白你的产品能做什么，大概怎么用。</p>
</li>
<li><p>用户能够在需要的时候容易地找到某个功能。</p>
</li>
</ul>
</li>
<li><p>信息架构为何需要设计？</p>
<p>信息架构绝对不是简单的堆叠，我们需要提取出第一层级、第二层级、第三层级等等的功能，再把杂乱的功能进行一个有组织的排序，有组织的排列，让用户很容易找到自己常使用的，对于不那么经常使用的功能的时候也不会有太大的麻烦。</p>
<p>所以我们需要更有逻辑性的方法。</p>
</li>
</ol>
<h3 id="2-产品信息架构设计的前期工作"><a href="#2-产品信息架构设计的前期工作" class="headerlink" title="2. 产品信息架构设计的前期工作"></a>2. 产品信息架构设计的前期工作</h3><p><strong>前期准备</strong></p>
<ol>
<li>了解用户，场景，习惯</li>
<li>了解业务需求</li>
<li>调研竞品的信息架构</li>
<li>卡片分类法</li>
</ol>
<p><strong>用户场景</strong>（Persona）</p>
<ol>
<li>目标用户是一群什么样的人</li>
<li>在什么场景下使用我们的产品</li>
<li>结果：通过用户场景帮助我们来提取我们的目标用户有什么样的使用习惯</li>
</ol>
<p><strong>1. 尊重用户习惯</strong></p>
<ol>
<li><p>用户通常用你的产品做什么？</p>
</li>
<li><p>用户有哪些思维定式？</p>
</li>
<li><p>用户用这类产品最关心什么？</p>
</li>
<li><p>用户用什么类似的产品？</p>
<p>结果：帮助我们不要再不必要的地方体现差别。思考：那我们的产品要在哪里创新呢？</p>
</li>
</ol>
<p><strong>2. 了解业务需求</strong></p>
<p>​    这里是一个统一的业务需求，不特别针对是B端还是C端来说</p>
<ol>
<li>业务方需求：不突出与业务无关内容</li>
<li>运营 &amp; 市场：让信息架构有更大的兼容性能让产品产生更多的可能性</li>
</ol>
<p><strong>3. 调研竞品的信息架构</strong></p>
<ol>
<li>找3-5个同类竞品分析他们的信息架构</li>
<li>用Xmind或者MindMap整理（思维导图）</li>
<li>改版<strong>（过去的版本也是竞品）</strong></li>
<li>分析竞品的 <strong>共性 &amp; 差异</strong>。共性：需要遵循的用户习惯。差异：设计机会点</li>
</ol>
<p><strong>4. 卡片分类法</strong></p>
<p>​    了解竞品后，还要进一步了解用户的心智模型</p>
<p>​    让用户对功能卡片进行分类，组织，并给相关功能的集合重新定义名称的一种自下而上的整理方法。</p>
<ol>
<li><p>前提准备：目标用户、功能/信息卡片（便利贴）、2支笔（一定要写的出字）、空白的卡片（便利贴）、笔记本（记录用户发言）</p>
</li>
<li><p>介绍卡片-&gt;用户归类卡片-&gt;让用户取名字-&gt;<strong>继续归类</strong> -&gt;简单访谈-&gt;拍照存档</p>
</li>
<li><p>功能卡片怎么提取？</p>
<ul>
<li>功能或界面的名字；</li>
<li>来源于信息架构树的树叶，没有子类；</li>
<li>不要过分细分，例如细分列表格内的元素，不要细分一个相对稳定的页面；</li>
<li>功能/信息卡片不要出现包含关系；</li>
<li>卡片总数不要超过30张。</li>
</ul>
</li>
<li><p>如何更好的引导用户？</p>
<img src="/Users/vivian/Desktop/github_blog/source/_posts/product-2020-5-7-信息架构/如何更好的引导用户.png" style="zoom:35%;">
</li>
<li><p>产出</p>
<p>重新梳理得出新的信息架构</p>
</li>
</ol>
<h3 id="3-产出产品信息架构设计"><a href="#3-产出产品信息架构设计" class="headerlink" title="3. 产出产品信息架构设计"></a>3. 产出产品信息架构设计</h3><ol>
<li>利用Mindmap 和 Axure整合信息<ul>
<li>重要性评级（对每一层进行分级，分级≠排序）</li>
<li>使用Axure 用站点地图来体现信息架构</li>
</ul>
</li>
<li>寻找层和度的平衡<ul>
<li>层级：信息架构树的深度，一般不建议超过5层</li>
<li>度：某一个节点中子节点的数量。举例：一级导航下有几个功能，就是一级导航下节点的数量，叫做度</li>
<li>总结：层过深，进入某一页功能时需要非常多层级，操作困难；度过多，在某一层级（页面）有太多的内容，用户认知成本增加，容易找不到想找的内容。</li>
</ul>
</li>
<li>验证核心使用流程<ul>
<li>尽量保证根据树结构进行层级自上而下前进</li>
<li>不连通层级间的跳跃，尽量发生在最后一步</li>
</ul>
</li>
<li>考虑信息架构和交互构图的关系</li>
<li>为讨论做好准备</li>
</ol>
]]></content>
      <categories>
        <category>product</category>
      </categories>
      <tags>
        <tag>B端产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title>普通工薪家庭的股票投资-实战篇</title>
    <url>/2020/05/06/stock-2020-5-6-tactics/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码不正确，请重新输入！" data-whm="文章不能被校验, 不过您还是能看看解密后的内容！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="该文章已加密, 请输入密码查看。" /><label>该文章已加密, 请输入密码查看。</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="f1d4a587f2c8f127d4f00daec4ebb720bd7c5d7f78f1852c75552b987377d306"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>stock</category>
      </categories>
      <tags>
        <tag>选股战法总结</tag>
      </tags>
  </entry>
</search>
